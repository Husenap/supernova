#include "SDF.si"

#include "Scenes/Temple.si"
#include "Scenes/HexGrid.si"

float SceneDistance(
	in float3 aPosition
) {
	//return TempleSceneDistance(aPosition);
	//return HexGridSceneDistance(aPosition);

	float3 p = aPosition;

	//Mod2(p.xz, 4.f);

	float r = 0.3f;
	float n = 4.f;

	float3 b = p;
	ModInterval1(b.x, 1.1f, 1.f, 8.f);
	ModInterval1(b.z, 1.5f, 0.f, 1.f);

	float box = FBox(b, 0.5f);

	float d = box;


	float3 s = p;
	ModInterval1(s.x, 1.1f, -8.f, -1.f);
	ModInterval1(s.z, 1.5f, 0.f, 1.f);
	float sphere = FSphere(s, 0.5f);
	sphere = OpDifferenceChamfer(sphere, FSphere(s-0.2f, 0.2f), 0.1f);
	sphere = OpUnionRound(sphere, FSphere(s-0.1f, 0.2f), 0.05f);

	d = OpUnion(d, sphere);

	float plane = FBox(p+float3(0,1,-0.75f), float3(100.f, 0.75f, 100.f));

	d = OpUnionColumns(d, plane, 0.1f, 4.f);

	//d = plane;

	return d;
}

struct SMaterial
{
	int myID;
	float myDistance;
	float3 myLocalPosition;
};

#define MAT_COMPARE(d, p, i)if(d < mat.myDistance){mat.myID = (i); mat.myDistance = (d); mat.myLocalPosition = (p);}

void GetSceneMaterial(
	in float3 p,
	inout SMaterial mat
) {
	SMaterial output;

	output.myID = -1;

	float sphere = FBox(p-float3(1.f, 0.f, 0.f), 0.5f);

	MAT_COMPARE(sphere, float3(1.f, 0.f, 0.f), 2);
}

void SceneMaterial(
	in float3 aPosition,
	out float3 aAlbedo,
	out float aRoughness,
	out float aMetalness
) {

	aRoughness = floor((abs(aPosition.x/1.1f))-0.5f)/7.f;
	aMetalness = floor((abs(aPosition.z/1.5f))+0.5f);
	aAlbedo = float3(
		0.1f+sin(aRoughness*6.f)*0.5f+0.5f,
		0.1f+sin(aRoughness*6.f+1.f)*0.5f+0.5f,
		0.1f+cos(aRoughness*6.f+2.f+aMetalness*3.f)*0.5f+0.5f
	);
	aAlbedo = pow((float3(251.f, 161.f, 43.f) / 255.f), 1.f);
	if(aPosition.y <= -0.249f)
	{
		aRoughness = sin(1.f + aPosition.z*1.f)*0.5f;
		aRoughness += sin(2.f + aPosition.x*11.f)*0.6f;
		aRoughness += sin(3.f + aPosition.z*14.f)*0.7f;
		aRoughness -= sin(sin(1.f + aPosition.x*aPosition.z*0.22f))*0.8f;
		aRoughness = pow(aRoughness, 2.2f);
		aMetalness = 0.f;
		aAlbedo = 0.26f;
	}

	return;


	SMaterial mat;
	mat.myID = -1;
	mat.myDistance = globalFar;
	mat.myLocalPosition = 0.f;

	GetSceneMaterial(aPosition, mat);

	float3 lp = aPosition - mat.myLocalPosition;

	if(mat.myID == -1)
	{
		aAlbedo = 1.f;
		aRoughness = 1.f;
		aMetalness = 0.f;
	}
	else if(mat.myID == 0)
	{
		aAlbedo = float3(1.f, 0.3f, 0.4f);
		aAlbedo *= 0.6f+0.4f*sin(lp.x*50.f);
		aRoughness = 0.2f;
		aMetalness = 0.f;
	}
	else if(mat.myID == 1)
	{
		aAlbedo = float3(0.5f, 1.f, 0.f);
		aAlbedo *= 0.6f+0.4f*sin(lp.z*50.f);
		aAlbedo *= 0.6f+0.4f*cos(lp.y*50.f);
		aRoughness = 0.02f;
		aMetalness = 1.f;
	}
	else if(mat.myID == 2)
	{
		aAlbedo = 0.26f;
		aAlbedo = float3(1.f, 0.01f, 0.01f);
		aRoughness = 0.5f+0.5f*cos(time);
		aMetalness = fmod(time/(2.f*PI), 2.f) < 1.f;
		aAlbedo = 1.f;
		aRoughness = 1.f;
		aMetalness = 1.f;
	}
}
