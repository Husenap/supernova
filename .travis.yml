language: cpp
sudo: required
os: linux
dist: trusty

env:
  - CXX_EXE=/usr/bin/g++-8 CC_EXE=/usr/bin/gcc-8 GCOV=/usr/bin/gcov-7 CMAKE_OPTIONS="-DENABLE_COVERAGE:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Debug"

branches:
  only:
    - master

compiler:
  - gcc

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - cmake
      - libxrandr-dev
      - libxinerama-dev
      - libxcursor-dev
      - libxi-dev
      - g++-8

install:
  - wget https://github.com/premake/premake-core/releases/download/v5.0.0-alpha11/premake-5.0.0-alpha11-linux.tar.gz
  - tar -xzvf premake-5.0.0-alpha11-linux.tar.gz
  - sudo apt-get -qq update
  - sudo apt-get install -y libassimp-dev libglm-dev graphviz libxcb-dri3-0 libxcb-present0 libpciaccess0 cmake libpng-dev libxcb-dri3-dev libx11-dev libx11-xcb-dev libmirclient-dev libwayland-dev libxrandr-dev
  - export VK_VERSION=1.1.101.0
  - wget -O vulkansdk-linux-x86_64-$VK_VERSION.tar.gz https://sdk.lunarg.com/sdk/download/$VK_VERSION/linux/vulkansdk-linux-x86_64-$VK_VERSION.tar.gz
  - tar zxf vulkansdk-linux-x86_64-$VK_VERSION.tar.gz
  - export VULKAN_SDK=$TRAVIS_BUILD_DIR/$VK_VERSION/x86_64

before_script:
  - sudo apt-get install
  - sudo -H pip install coverage

script:
  - coverage help
  - export CXX=$CXX_EXE
  - export CC=$CC_EXE
  - cmake $CMAKE_OPTIONS .
  - cmake --build .
  - ls -la
  - bash <(curl -s https://codecov.io/bash) -x $GCOV

after_success:
  - wget https://raw.githubusercontent.com/DiscordHooks/travis-ci-discord-webhook/master/send.sh
  - chmod +x send.sh
  - ./send.sh success $WEBHOOK_URL
after_failure:
  - wget https://raw.githubusercontent.com/DiscordHooks/travis-ci-discord-webhook/master/send.sh
  - chmod +x send.sh
  - ./send.sh failure $WEBHOOK_URL
